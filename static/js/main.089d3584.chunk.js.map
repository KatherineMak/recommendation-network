{"version":3,"sources":["actions/items.js","components/ui/ProductList.js","components/ui/ProductComments.js","components/ui/AddComment.js","components/ui/LoginForm.js","components/ui/RegisterForm.js","components/ui/Menu.js","components/containers.js","reducers/items.js","reducers/index.js","store/configureStore.js","components/ui/Whoops404.js","App.js","serviceWorker.js","index.js"],"names":["itemsIsLoading","bool","type","isLoading","commentsIsLoading","productActiveKey","activeKey","userLoggedIn","status","message","token","productFetchComments","url","dispatch","fetch","then","response","ok","Error","statusText","json","comments","productCommentsFetchSuccess","catch","hasErrored","ProductList","this","props","fetchData","Container","Row","style","margin","Col","md","Nav","variant","onSelect","selectedKey","setActiveKey","fetchComments","className","items","map","item","Item","key","id","Link","eventKey","title","filter","x","product","sm","Card","width","backgroundColor","Img","src","img","alt","Body","Title","Text","text","AddCommentForm","Comments","Component","ProductComments","commentsHasErrored","marginLeft","slice","reverse","comment","created_by","username","Subtitle","created_at","rate","AddComment","alert","button","Button","marginRight","float","userStatus","Alert","disabled","marginBottom","padding","Form","onSubmit","e","method","headers","body","JSON","stringify","target","elements","addComment","value","rateProduct","jsonData","success","console","log","Group","controlId","Label","Control","required","as","rows","LoginForm","logout","preventDefault","data","FormData","addUserStatus","history","push","border","column","name","placeholder","href","RegisterForm","Menu","login","Products","connect","state","itemsHasErrored","itemsFetchDataSuccess","itemsFetchData","match","productId","product_id","v4","timestamp","Date","toISOString","toString","UserLogin","UserRegister","AppMenu","action","combineReducers","logger","store","next","result","groupCollapsed","getState","groupEnd","saver","localStorage","storeFactory","applyMiddleware","thunk","createStore","rootReducer","parse","Whoops404","location","lg","pathname","window","React","App","component","path","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.089d3584.chunk.js","sourcesContent":["import { v4 } from 'uuid'\r\n//actions\r\nexport function itemsHasErrored(bool) {\r\n    return {\r\n        type: 'ITEMS_HAS_ERRORED',\r\n        hasErrored: bool\r\n    };\r\n}\r\n//actions\r\nexport function itemsIsLoading(bool) {\r\n    return {\r\n        type: 'ITEMS_IS_LOADING',\r\n        isLoading: bool\r\n    };\r\n}\r\nexport function commentsHasErrored(bool) {\r\n    return {\r\n        type: 'COMMENTS_HAS_ERRORED',\r\n        hasErrored: bool\r\n    };\r\n}\r\n//actions\r\nexport function commentsIsLoading(bool) {\r\n    return {\r\n        type: 'COMMENTS_IS_LOADING',\r\n        isLoading: bool\r\n    };\r\n}\r\n//actions\r\nexport function itemsFetchDataSuccess(items) {\r\n    return {\r\n        type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n        items\r\n    };\r\n}\r\nexport function productActiveKey(activeKey) {\r\n    return {\r\n        type: 'PRODUCT_ACTIVE_KEY',\r\n        activeKey\r\n    };\r\n}\r\nexport function productCommentsFetchSuccess(comments) {\r\n    return {\r\n        type: 'PRODUCT_COMMENTS_FETCH_SUCCESS',\r\n        comments\r\n    };\r\n}\r\n\r\nexport function addComment(text, rate, product_id) {\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        id: v4(),\r\n        product: product_id,\r\n        text: text,\r\n        rate: rate,\r\n        timestamp: new Date().toISOString().toString(),\r\n        created_by: {\r\n            id: 1,\r\n            username: \"user\"\r\n        },\r\n    };\r\n}\r\n\r\nexport function userLoggedIn(status, message, token) {\r\n    return {\r\n        type: 'USER_LOGGED_IN',\r\n        status,\r\n        message,\r\n        token\r\n    };\r\n}\r\n\r\nexport function userLogout(status, message, token) {\r\n    return {\r\n        type: 'USER_LOG',\r\n        status,\r\n        message,\r\n        token\r\n    };\r\n}\r\n\r\n//creator actions\r\nexport function itemsFetchData(url) {\r\n    return (dispatch) => {\r\n        dispatch(itemsIsLoading(true));\r\n\r\n        fetch(url)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n\r\n                dispatch(itemsIsLoading(false));\r\n\r\n                return response;\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                dispatch(itemsFetchDataSuccess(items));\r\n                dispatch(productActiveKey(1));\r\n                dispatch(productFetchComments('http://smktesting.herokuapp.com/api/reviews/1?format=json'));\r\n            })\r\n            .catch(() => dispatch(itemsHasErrored(true)));\r\n    };\r\n}\r\n//creator actions\r\nexport function productFetchComments(url) {\r\n    return (dispatch) => {\r\n        dispatch(commentsIsLoading(true));\r\n        fetch(url)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n\r\n                dispatch(commentsIsLoading(false));\r\n\r\n                return response;\r\n            })\r\n            .then((response) => response.json())\r\n            .then((comments) => {\r\n                dispatch(productCommentsFetchSuccess(comments));\r\n            })\r\n            .catch(() => dispatch(commentsHasErrored(true)));\r\n    };\r\n}","import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col, Card, Nav} from \"react-bootstrap\";\r\nimport {Comments} from '../containers';\r\nimport {AddCommentForm} from '../containers';\r\n\r\nclass ProductList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchData('http://smktesting.herokuapp.com/api/products/?format=json');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.hasErrored) {\r\n            return <p>Sorry! There was an error loading the items</p>;\r\n        }\r\n\r\n        if (this.props.isLoading) {\r\n            return <p>Loading…</p>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row style={{margin: \"30px auto\" }}>\r\n                        <Col md={3}>\r\n                            <Nav variant=\"pills\" activeKey={this.props.activeKey}\r\n                                 onSelect={(selectedKey) => {\r\n                                    this.props.setActiveKey(selectedKey);\r\n                                    this.props.fetchComments('http://smktesting.herokuapp.com/api/reviews/'+selectedKey+'?format=json');\r\n                                 }\r\n                                } className=\"flex-column\">\r\n                                {this.props.items.map((item) => (\r\n                                    <Nav.Item key={item.id}>\r\n                                        <Nav.Link eventKey={item.id}>\r\n                                            {item.title}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                ))}\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        {(this.props.items.filter(x => x.id == this.props.activeKey)).map(product =>\r\n                            <Col md={4} sm={4}  key={product.id}>\r\n                                <Card style={{\r\n                                    width: 'auto',\r\n                                    backgroundColor: \"#AFEEEE\"\r\n\r\n                                }}>\r\n                                    <Card.Img style={{margin: \"10px 0 10px 0\" }} variant=\"top\" src={'http://smktesting.herokuapp.com/static/' + product.img} alt={product.title}/>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{product.title}</Card.Title>\r\n                                        <Card.Text>\r\n                                            Product description: <br />\r\n                                            {product.text}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                        <Col md={5} sm={5}>\r\n                            <AddCommentForm/>\r\n                            <Comments {...this.props} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProductList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    fetchComments: PropTypes.func.isRequired,\r\n    items: PropTypes.array.isRequired,\r\n    hasErrored: PropTypes.bool.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\nexport default ProductList","import React, { Component }  from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\n\r\nclass ProductComments extends Component {\r\n\r\n    render() {\r\n\r\n        if (this.props.commentsHasErrored) {\r\n            return <Card md={6} sm={6} style={{ marginLeft: '50px'}}>\r\n                Sorry! There was an error loading the comments\r\n            </Card>;\r\n        }\r\n\r\n        if (this.props.commentsIsLoading) {\r\n            return <Card md={6} sm={6} style={{ marginLeft: '50px'}}>\r\n                Loading…\r\n            </Card>;\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <Card md={5} sm={5}>\r\n                <h4 style={{ margin: '10px'}}> Reviews: </h4>\r\n\r\n                {this.props.comments.slice(0).reverse().map(comment =>\r\n                    <Card style={{width: 'auto', margin: '10px'}} key={comment.id}>\r\n                        <Card.Body>\r\n                            <Card.Title>{comment.created_by.username}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">At {comment.created_at}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                Rate: {comment.rate}<br />\r\n                                Comment: {comment.text}<br />\r\n                                Product id: {comment.product}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )}\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default ProductComments","import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Card, Form, Button, Alert} from \"react-bootstrap\";\r\n\r\nclass AddComment extends Component {\r\n    render() {\r\n        var alert;\r\n        var button = <Button variant=\"primary\" type=\"submit\" style={{marginRight: \"5px\", float: \"right\"}}>\r\n            Submit\r\n        </Button>;\r\n        const submit = e => {\r\n            fetch('http://smktesting.herokuapp.com/api/reviews/'+this.props.activeKey, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Token '+this.props.userStatus.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    text: e.target.elements.addComment.value,\r\n                    rate: e.target.elements.rateProduct.value,\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then((jsonData) => {\r\n                 if (!jsonData.success) {\r\n                     console.log(\"Error\");\r\n                 }\r\n            });\r\n        };\r\n        if (!this.props.userStatus.status) {\r\n            alert =\r\n                <Alert key={1} variant=\"danger\">\r\n                    <p>Please, login to add your review.</p>\r\n                </Alert>;\r\n\r\n            button = <Button variant=\"primary\" type=\"submit\" style={{marginRight: \"5px\", float: \"right\"}} disabled>\r\n                Submit\r\n            </Button>;\r\n        }\r\n        return (\r\n            <div>\r\n                {alert}\r\n                <Card md={5} sm={5} style={{ marginBottom: '20px', padding: \"10px\"}}>\r\n\r\n                    <Form onSubmit={submit}>\r\n                        <Form.Group controlId=\"addComment\">\r\n                            <Form.Label>Your review</Form.Label>\r\n                            <Form.Control required as=\"textarea\" rows=\"3\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"rateProduct\">\r\n                            <Form.Label>Rate product</Form.Label>\r\n                            <Form.Control as=\"select\">\r\n                                <option>5</option>\r\n                                <option>4</option>\r\n                                <option>3</option>\r\n                                <option>2</option>\r\n                                <option>1</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {button}\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddComment.propTypes = {\r\n    userStatus: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AddComment","import React, { Component }  from 'react';\r\nimport {Form, Button, Row, Col, Container, Alert} from \"react-bootstrap\";\r\n\r\nclass LoginForm extends Component {\r\n    componentWillMount() {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        const submit = e => {\r\n            e.preventDefault();\r\n            const data = new FormData(e.target);\r\n            fetch('http://smktesting.herokuapp.com/api/login/', {\r\n                method: 'POST',\r\n                body: data,\r\n            })\r\n            .then(response => response.json())\r\n            .then((jsonData) => {\r\n                if (jsonData.success) {\r\n                    this.props.addUserStatus(jsonData.success, \"ok\", jsonData.token);\r\n                    console.log(this.props.userStatus.message);\r\n                    this.props.history.push(`/`);\r\n                    // return <p>this.props.userStatus.message</p>;\r\n                } else {\r\n                    this.props.addUserStatus(jsonData.success, jsonData.message, \"\");\r\n                    console.log(this.props.userStatus.message);\r\n                    // return <div>this.props.userStatus.message</div>;\r\n                }\r\n            });\r\n            // this.props.addComment(e.target.elements.addComment.value, e.target.elements.rateProduct.value, this.props.activeKey)\r\n        };\r\n\r\n        // if (this.props.userStatus.status) {\r\n        //     return <p>this.props.userStatus.message</p>;\r\n        // }\r\n        //\r\n        let alert;\r\n        if ((this.props.userStatus.status === false) && (this.props.userStatus.message !== \"logout\")) {\r\n            alert =\r\n            <Alert key={1} variant=\"danger\">\r\n                {this.props.userStatus.message}\r\n            </Alert>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row style={{margin: \"10px 30px\"}} className=\"justify-content-md-center\">\r\n                        <p>Login form</p>\r\n                    </Row>\r\n                    <Row style={{margin: \"10px 30px\"}} className=\"justify-content-md-center\">\r\n                        {alert}\r\n                    </Row>\r\n                    <Row style={{margin: \"30px\"}} className=\"justify-content-md-center\">\r\n                        <Form onSubmit={submit} style={{padding: \"20px\", border: \"4px ridge #D0D0D0\"}}>\r\n\r\n                            <Form.Group as={Row} controlId=\"username\">\r\n                                <Form.Label column sm={3}>\r\n                                    Username\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"password\">\r\n                                <Form.Label column sm={3}>\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" style={{marginRight: \"5px\", float: \"right\"}}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <p>If you are not registered, <a href=\"/register\"> register</a>.</p>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginForm","import React, { Component }  from 'react';\r\nimport {Form, Button, Row, Col, Container, Alert} from \"react-bootstrap\";\r\n\r\nclass RegisterForm extends Component {\r\n    render() {\r\n        const submit = e => {\r\n            e.preventDefault();\r\n            const data = new FormData(e.target);\r\n            fetch('http://smktesting.herokuapp.com/api/register/', {\r\n                method: 'POST',\r\n                body: data,\r\n            })\r\n            .then(response => response.json())\r\n            .then((jsonData) => {\r\n                if (jsonData.success) {\r\n                    this.props.addUserStatus(jsonData.success, \"ok\", jsonData.token);\r\n                    this.props.history.push(`/`);\r\n                } else {\r\n                    this.props.addUserStatus(jsonData.success, jsonData.message, \"\");\r\n                }\r\n            });\r\n        };\r\n\r\n        let alert;\r\n        if ((this.props.userStatus.status === false) && (this.props.userStatus.message !== \"logout\")) {\r\n            alert =\r\n                <Alert key={1} variant=\"danger\">\r\n                    {this.props.userStatus.message}\r\n                </Alert>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row style={{margin: \"10px 30px\"}} className=\"justify-content-md-center\">\r\n                        <p>Registration form</p>\r\n                    </Row>\r\n                    <Row style={{margin: \"10px 30px\"}} className=\"justify-content-md-center\">\r\n                        {alert}\r\n                    </Row>\r\n                    <Row style={{margin: \"30px\"}} className=\"justify-content-md-center\">\r\n                        <Form onSubmit={submit} style={{padding: \"20px\", border: \"4px ridge #D0D0D0\"}}>\r\n\r\n                            <Form.Group as={Row} controlId=\"username\">\r\n                                <Form.Label column sm={3}>\r\n                                    Username\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"password\">\r\n                                <Form.Label column sm={3}>\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" style={{marginRight: \"5px\", float: \"right\"}}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RegisterForm","import React, {Component} from 'react';\r\nimport {Nav} from \"react-bootstrap\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        let login = \"Login\";\r\n        if (this.props.userStatus.status) {\r\n            login = \"Logout\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Nav className=\"justify-content-end\" activeKey=\"/\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/\">Products</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/login\">{login}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Menu","import { connect } from 'react-redux';\r\nimport { itemsFetchData, productFetchComments, productActiveKey, addComment, userLoggedIn, userLogout } from '../actions/items';\r\nimport ProductList from './ui/ProductList';\r\nimport ProductComments from './ui/ProductComments';\r\nimport AddComment from './ui/AddComment';\r\nimport LoginForm from './ui/LoginForm';\r\nimport RegisterForm from './ui/RegisterForm';\r\nimport Menu from './ui/Menu';\r\n\r\n//Redux state mapping\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        hasErrored: state.itemsHasErrored,\r\n        isLoading: state.itemsIsLoading,\r\n        commentsHasErrored: state.commentsHasErrored,\r\n        commentsIsLoading: state.commentsIsLoading,\r\n        activeKey: state.activeKey,\r\n        comments: state.comments\r\n    };\r\n};\r\n//mapping the dispatch of our actions creator to component properties\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url) => dispatch(itemsFetchData(url)),\r\n        fetchComments: (url) => dispatch(productFetchComments(url)),\r\n        setActiveKey: (activeKey) => dispatch(productActiveKey(activeKey))\r\n    };\r\n};\r\nexport const Products = connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n// export const Comments = connect(mapStateToProps, mapDispatchToProps)(ProductComments);\r\nexport const Comments = connect(\r\n    (state, {match}) =>\r\n        ({\r\n            commentsHasErrored: state.commentsHasErrored,\r\n            commentsIsLoading: state.commentsIsLoading,\r\n            comments: state.comments\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            //fetchComments: (url) => dispatch(productFetchComments(url)),\r\n        })\r\n)(ProductComments);\r\n\r\nexport const AddCommentForm = connect(\r\n    (state) =>\r\n        ({\r\n            activeKey: state.activeKey,\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            addComment: (text, rate, productId) => dispatch(addComment(text, rate, productId)),\r\n        })\r\n)(AddComment);\r\n\r\nexport const UserLogin = connect(\r\n    (state) =>\r\n        ({\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            addUserStatus: (status, message, token) => dispatch(userLoggedIn(status, message, token)),\r\n            logout: () => dispatch(userLogout()),\r\n        })\r\n)(LoginForm);\r\n\r\nexport const UserRegister = connect(\r\n    (state) =>\r\n        ({\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            addUserStatus: (status, message, token) => dispatch(userLoggedIn(status, message, token)),\r\n        })\r\n)(RegisterForm);\r\n\r\nexport const AppMenu = connect(\r\n    (state) =>\r\n        ({\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n        })\r\n)(Menu);\r\n\r\n// export const Logout = connect(\r\n//     null,\r\n//     dispatch =>\r\n//         ({\r\n//             logout: () => dispatch(userLogout()),\r\n//         })\r\n// )(LogoutPage);","export function itemsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function itemsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_IS_LOADING':\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function commentsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'COMMENTS_IS_LOADING':\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function commentsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'COMMENTS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport function items(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_FETCH_DATA_SUCCESS':\r\n            return action.items;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function comments(state = [], action) {\r\n    switch (action.type) {\r\n        case 'PRODUCT_COMMENTS_FETCH_SUCCESS':\r\n            return action.comments;\r\n            // return [...state, action.comments];\r\n        case 'ADD_COMMENT' :\r\n            return [\r\n                ...state,\r\n                comment({}, action)\r\n            ]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function comment(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'ADD_COMMENT':\r\n            return {\r\n                id: action.id,\r\n                product: action.product,\r\n                text: action.text,\r\n                rate: action.rate,\r\n                created_at: action.timestamp,\r\n                created_by: action.created_by\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function activeKey(state = null, action) {\r\n    switch (action.type) {\r\n        case 'PRODUCT_ACTIVE_KEY':\r\n            return action.activeKey;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function userStatus(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'USER_LOGGED_IN':\r\n            return {\r\n                status: action.status,\r\n                message: action.message,\r\n                token: action.token\r\n            };\r\n\r\n        case 'USER_LOGOUT':\r\n            return {\r\n                status: false,\r\n                message: \"logout\",\r\n                token: \"\"\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { items, itemsHasErrored, itemsIsLoading, activeKey, commentsHasErrored, commentsIsLoading, comments, comment, userStatus} from './items';\r\n\r\nexport default combineReducers({\r\n    items,\r\n    itemsHasErrored,\r\n    itemsIsLoading,\r\n    commentsHasErrored,\r\n    commentsIsLoading,\r\n    comment,\r\n    comments,\r\n    activeKey,\r\n    userStatus\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst logger = store => next => action => {\r\n    let result\r\n    console.groupCollapsed(\"dispatching\", action.type)\r\n    console.log('prev state', store.getState())\r\n    console.log('action', action)\r\n    result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n}\r\n\r\nconst saver = store => next => action => {\r\n    let result = next(action)\r\n    localStorage['redux-store'] = JSON.stringify(store.getState())\r\n    return result\r\n}\r\n\r\nconst storeFactory = () =>\r\n    applyMiddleware(logger, saver, thunk)(createStore)(\r\n        rootReducer,\r\n        JSON.parse(localStorage['redux-store'])\r\n    )\r\n\r\n\r\n\r\nexport default storeFactory","import React from 'react';\r\nimport { Container, Alert } from \"react-bootstrap\";\r\n\r\nconst Whoops404 = ({ location }) =>\r\n    <div style={{margin: \"30px auto\" }}>\r\n        <Container>\r\n            <Alert lg={8} variant=\"danger\">\r\n                Whoops cannot find resource at '{location.pathname}'\r\n            </Alert>\r\n        </Container>\r\n    </div>\r\n\r\nexport default Whoops404","import React from 'react';\n// import './App.css';\nimport {Products, UserLogin, UserRegister, AppMenu} from './components/containers';\nimport { Provider } from 'react-redux';\nimport storeFactory from './store/configureStore'\n// import configureStore from './store/configureStore';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport Whoops404 from './components/ui/Whoops404';\n\nconst store = storeFactory()\n// const store = configureStore();\n\nwindow.React = React\nwindow.store = store\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Router>\n            <Route component={AppMenu} />\n            <Switch>\n                {/*<Route exact path=\"/:id\" component={Product} />*/}\n                <Route path='/login' exact component={UserLogin}/>\n                <Route path='/register' exact component={UserRegister}/>\n                <Route path='/' exact component={Products}/>\n                    {/*<IndexRoute component={ItemList} />*/}\n                    {/*<Route path='admin' component={Admin} />*/}\n                    {/*<Route path='genre' component={Genre} />*/}\n                <Route component={Whoops404}/>\n            </Switch>\n        </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}