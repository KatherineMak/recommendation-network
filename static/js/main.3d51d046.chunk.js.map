{"version":3,"sources":["actions/items.js","components/ui/ProductList.js","components/ui/ProductComments.js","components/ui/AddComment.js","components/ui/LoginForm.js","components/ui/RegisterForm.js","components/containers.js","reducers/items.js","reducers/index.js","store/configureStore.js","components/ui/Whoops404.js","App.js","serviceWorker.js","index.js"],"names":["itemsIsLoading","bool","type","isLoading","commentsIsLoading","productActiveKey","activeKey","userLoggedIn","status","message","token","productFetchComments","url","dispatch","fetch","then","response","ok","Error","statusText","json","comments","productCommentsFetchSuccess","catch","hasErrored","ProductList","this","props","fetchData","Container","Row","style","margin","Col","md","Nav","variant","onSelect","selectedKey","setActiveKey","fetchComments","className","items","map","item","Item","key","id","Link","eventKey","title","filter","x","product","sm","Card","width","backgroundColor","Img","src","img","alt","Body","Title","Text","text","AddCommentForm","Comments","Component","ProductComments","commentsHasErrored","marginLeft","slice","reverse","comment","created_by","username","Subtitle","created_at","rate","AddComment","alert","button","Button","undefined","userStatus","Alert","disabled","marginBottom","padding","Form","onSubmit","e","preventDefault","console","log","target","elements","rateProduct","value","method","headers","body","JSON","stringify","addComment","jsonData","success","history","push","addUserStatus","Group","controlId","Label","Control","required","as","rows","LoginForm","data","FormData","border","column","name","placeholder","marginRight","float","RegisterForm","Products","connect","state","itemsHasErrored","itemsFetchDataSuccess","itemsFetchData","match","productId","product_id","v4","timestamp","Date","toISOString","toString","UserLogin","UserRegister","action","combineReducers","initialState","Whoops404","location","lg","pathname","store","createStore","rootReducer","applyMiddleware","thunk","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d51d046.chunk.js","sourcesContent":["import { v4 } from 'uuid'\r\n//actions\r\nexport function itemsHasErrored(bool) {\r\n    return {\r\n        type: 'ITEMS_HAS_ERRORED',\r\n        hasErrored: bool\r\n    };\r\n}\r\n//actions\r\nexport function itemsIsLoading(bool) {\r\n    return {\r\n        type: 'ITEMS_IS_LOADING',\r\n        isLoading: bool\r\n    };\r\n}\r\nexport function commentsHasErrored(bool) {\r\n    return {\r\n        type: 'COMMENTS_HAS_ERRORED',\r\n        hasErrored: bool\r\n    };\r\n}\r\n//actions\r\nexport function commentsIsLoading(bool) {\r\n    return {\r\n        type: 'COMMENTS_IS_LOADING',\r\n        isLoading: bool\r\n    };\r\n}\r\n//actions\r\nexport function itemsFetchDataSuccess(items) {\r\n    return {\r\n        type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n        items\r\n    };\r\n}\r\nexport function productActiveKey(activeKey) {\r\n    return {\r\n        type: 'PRODUCT_ACTIVE_KEY',\r\n        activeKey\r\n    };\r\n}\r\nexport function productCommentsFetchSuccess(comments) {\r\n    return {\r\n        type: 'PRODUCT_COMMENTS_FETCH_SUCCESS',\r\n        comments\r\n    };\r\n}\r\n\r\nexport function addComment(text, rate, product_id) {\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        id: v4(),\r\n        product: product_id,\r\n        text: text,\r\n        rate: rate,\r\n        timestamp: new Date().toISOString().toString(),\r\n        created_by: {\r\n            id: 1,\r\n            username: \"user\"\r\n        },\r\n    };\r\n}\r\n\r\nexport function userLoggedIn(status, message, token) {\r\n    return {\r\n        type: 'USER_LOGGED_IN',\r\n        status,\r\n        message,\r\n        token\r\n    };\r\n}\r\n\r\n//creator actions\r\nexport function itemsFetchData(url) {\r\n    return (dispatch) => {\r\n        dispatch(itemsIsLoading(true));\r\n\r\n        fetch(url)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n\r\n                dispatch(itemsIsLoading(false));\r\n\r\n                return response;\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                dispatch(itemsFetchDataSuccess(items));\r\n                dispatch(productActiveKey(1));\r\n                dispatch(productFetchComments('http://smktesting.herokuapp.com/api/reviews/1?format=json'));\r\n            })\r\n            .catch(() => dispatch(itemsHasErrored(true)));\r\n    };\r\n}\r\n//creator actions\r\nexport function productFetchComments(url) {\r\n    return (dispatch) => {\r\n        dispatch(commentsIsLoading(true));\r\n        fetch(url)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n\r\n                dispatch(commentsIsLoading(false));\r\n\r\n                return response;\r\n            })\r\n            .then((response) => response.json())\r\n            .then((comments) => {\r\n                dispatch(productCommentsFetchSuccess(comments));\r\n            })\r\n            .catch(() => dispatch(commentsHasErrored(true)));\r\n    };\r\n}","import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col, Card, Nav} from \"react-bootstrap\";\r\nimport {Comments} from '../containers';\r\nimport {AddCommentForm} from '../containers';\r\n\r\nclass ProductList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchData('http://smktesting.herokuapp.com/api/products/?format=json');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.hasErrored) {\r\n            return <p>Sorry! There was an error loading the items</p>;\r\n        }\r\n\r\n        if (this.props.isLoading) {\r\n            return <p>Loading…</p>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row style={{margin: \"30px auto\" }}>\r\n                        <Col md={3}>\r\n                            <Nav variant=\"pills\" activeKey={this.props.activeKey}\r\n                                 onSelect={(selectedKey) => {\r\n                                    this.props.setActiveKey(selectedKey);\r\n                                    this.props.fetchComments('http://smktesting.herokuapp.com/api/reviews/'+selectedKey+'?format=json');\r\n                                 }\r\n                                } className=\"flex-column\">\r\n                                {this.props.items.map((item) => (\r\n                                    <Nav.Item key={item.id}>\r\n                                        <Nav.Link eventKey={item.id}>\r\n                                            {item.title}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                ))}\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        {(this.props.items.filter(x => x.id == this.props.activeKey)).map(product =>\r\n                            <Col md={4} sm={4}  key={product.id}>\r\n                                <Card style={{\r\n                                    width: 'auto',\r\n                                    backgroundColor: \"#AFEEEE\"\r\n\r\n                                }}>\r\n                                    <Card.Img style={{margin: \"10px 0 10px 0\" }} variant=\"top\" src={'http://smktesting.herokuapp.com/static/' + product.img} alt={product.title}/>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{product.title}</Card.Title>\r\n                                        <Card.Text>\r\n                                            Product description: <br />\r\n                                            {product.text}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                        <Col md={5} sm={5}>\r\n                            <AddCommentForm/>\r\n                            <Comments {...this.props} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProductList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    items: PropTypes.array.isRequired,\r\n    hasErrored: PropTypes.bool.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\nexport default ProductList","import React, { Component }  from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\n\r\nclass ProductComments extends Component {\r\n\r\n    render() {\r\n\r\n        if (this.props.commentsHasErrored) {\r\n            return <Card md={6} sm={6} style={{ marginLeft: '50px'}}>\r\n                Sorry! There was an error loading the comments\r\n            </Card>;\r\n        }\r\n\r\n        if (this.props.commentsIsLoading) {\r\n            return <Card md={6} sm={6} style={{ marginLeft: '50px'}}>\r\n                Loading…\r\n            </Card>;\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <Card md={5} sm={5}>\r\n                <h4 style={{ margin: '10px'}}> Reviews: </h4>\r\n\r\n                {this.props.comments.slice(0).reverse().map(comment =>\r\n                    <Card style={{width: 'auto', margin: '10px'}} key={comment.id}>\r\n                        <Card.Body>\r\n                            <Card.Title>{comment.created_by.username}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">At {comment.created_at}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                Rate: {comment.rate}<br />\r\n                                Comment: {comment.text}<br />\r\n                                Product id: {comment.product}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )}\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default ProductComments","import React, { Component }  from 'react';\r\nimport {Card, Form, Button, Alert} from \"react-bootstrap\";\r\n\r\nclass AddComment extends Component {\r\n    render() {\r\n        var alert;\r\n        var button = <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n        </Button>;\r\n        const submit = e => {\r\n            if (this.props.userStatus.token === undefined) {\r\n                e.preventDefault();\r\n            } else {\r\n                console.log('http://smktesting.herokuapp.com/api/reviews/'+this.props.activeKey);\r\n                console.log('Token '+this.props.userStatus.token);\r\n                console.log(\"rate\"+e.target.elements.rateProduct.value);\r\n                fetch('http://smktesting.herokuapp.com/api/reviews/'+this.props.activeKey, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Token '+this.props.userStatus.token,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        text: e.target.elements.addComment.value,\r\n                        rate: e.target.elements.rateProduct.value,\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then((jsonData) => {\r\n                        console.log(jsonData.success);\r\n                        this.props.history.push(`/`);\r\n                         if (jsonData.success) {\r\n                             console.log(this.props.userStatus.message);\r\n                         } else {\r\n                             this.props.addUserStatus(jsonData.success, jsonData.message, \"\");\r\n                            console.log(this.props.userStatus.message);\r\n                        }\r\n                    });\r\n            }\r\n            //e.preventDefault();\r\n\r\n            // this.props.addComment(e.target.elements.addComment.value, e.target.elements.rateProduct.value, this.props.activeKey);\r\n        };\r\n        if (this.props.userStatus.token === undefined) {\r\n            alert =\r\n                <Alert key={1} variant=\"danger\">\r\n                    <p>Please, login to add your review.</p>\r\n                </Alert>;\r\n\r\n            button = <Button variant=\"primary\" type=\"submit\" disabled>\r\n                Submit\r\n            </Button>;\r\n        }\r\n        return (\r\n            <div>\r\n                {alert}\r\n                <Card md={5} sm={5} style={{ marginBottom: '20px', padding: \"10px\"}}>\r\n\r\n                    <Form onSubmit={submit}>\r\n                        <Form.Group controlId=\"addComment\">\r\n                            <Form.Label>Your review</Form.Label>\r\n                            <Form.Control required as=\"textarea\" rows=\"3\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"rateProduct\">\r\n                            <Form.Label>Rate product</Form.Label>\r\n                            <Form.Control as=\"select\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {button}\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddComment","import React, { Component }  from 'react';\r\nimport {Form, Button, Row, Col, Container, Alert} from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router'\r\n\r\nclass LoginForm extends Component {\r\n    render() {\r\n        const submit = e => {\r\n            e.preventDefault();\r\n            const data = new FormData(e.target);\r\n            fetch('http://smktesting.herokuapp.com/api/login/', {\r\n                method: 'POST',\r\n                body: data,\r\n            })\r\n            .then(response => response.json())\r\n            .then((jsonData) => {\r\n                if (jsonData.success) {\r\n                    this.props.addUserStatus(jsonData.success, \"ok\", jsonData.token);\r\n                    console.log(this.props.userStatus.message);\r\n                    this.props.history.push(`/`);\r\n                    // return <p>this.props.userStatus.message</p>;\r\n                } else {\r\n                    this.props.addUserStatus(jsonData.success, jsonData.message, \"\");\r\n                    console.log(this.props.userStatus.message);\r\n                    // return <div>this.props.userStatus.message</div>;\r\n                }\r\n            });\r\n            // this.props.addComment(e.target.elements.addComment.value, e.target.elements.rateProduct.value, this.props.activeKey)\r\n        };\r\n\r\n        // if (this.props.userStatus.status) {\r\n        //     return <p>this.props.userStatus.message</p>;\r\n        // }\r\n        //\r\n        let alert;\r\n        if (this.props.userStatus.status === false) {\r\n            alert =\r\n            <Alert key={1} variant=\"danger\">\r\n                {this.props.userStatus.message}\r\n            </Alert>;\r\n        }\r\n        //\r\n        // if (this.props.userStatus.status === true) {\r\n        //     return <Redirect to='/'/>;\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row style={{margin: \"10px 30px\"}} className=\"justify-content-md-center\">\r\n                        {alert}\r\n                    </Row>\r\n                    <Row style={{margin: \"30px\"}} className=\"justify-content-md-center\">\r\n                        <Form onSubmit={submit} style={{padding: \"20px\", border: \"4px ridge #D0D0D0\"}}>\r\n\r\n                            <Form.Group as={Row} controlId=\"username\">\r\n                                <Form.Label column sm={3}>\r\n                                    Username\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"password\">\r\n                                <Form.Label column sm={3}>\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" style={{marginRight: \"5px\", float: \"right\"}}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginForm","import React, { Component }  from 'react';\r\nimport {Form, Button, Row, Col, Container, Alert} from \"react-bootstrap\";\r\n\r\nclass RegisterForm extends Component {\r\n    render() {\r\n        const submit = e => {\r\n            e.preventDefault();\r\n            const data = new FormData(e.target);\r\n            fetch('http://smktesting.herokuapp.com/api/register/', {\r\n                method: 'POST',\r\n                body: data,\r\n            })\r\n                .then(response => response.json())\r\n                .then((jsonData) => {\r\n                    if (jsonData.success) {\r\n                        this.props.addUserStatus(jsonData.success, \"ok\", jsonData.token);\r\n                        console.log(this.props.userStatus.message);\r\n                        // this.props.history.push(`/`);\r\n                        // return <p>this.props.userStatus.message</p>;\r\n                    } else {\r\n                        this.props.addUserStatus(jsonData.success, jsonData.message, \"\");\r\n                        console.log(this.props.userStatus.message);\r\n                        // return <div>this.props.userStatus.message</div>;\r\n                    }\r\n                });\r\n            // this.props.addComment(e.target.elements.addComment.value, e.target.elements.rateProduct.value, this.props.activeKey)\r\n        };\r\n\r\n        // if (this.props.userStatus.status) {\r\n        //     return <p>this.props.userStatus.message</p>;\r\n        // }\r\n        //\r\n        let alert;\r\n        if (this.props.userStatus.status === false) {\r\n            alert =\r\n                <Alert key={1} variant=\"danger\">\r\n                    {this.props.userStatus.message}\r\n                </Alert>;\r\n        }\r\n\r\n        if (this.props.userStatus.status === true)  {\r\n            alert =\r\n                <Alert key={1} variant=\"success\">\r\n                    {this.props.userStatus.message}\r\n                </Alert>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row style={{margin: \"10px 30px\"}} className=\"justify-content-md-center\">\r\n                        {alert}\r\n                    </Row>\r\n                    <Row style={{margin: \"30px\"}} className=\"justify-content-md-center\">\r\n                        <Form onSubmit={submit} style={{padding: \"20px\", border: \"4px ridge #D0D0D0\"}}>\r\n\r\n                            <Form.Group as={Row} controlId=\"username\">\r\n                                <Form.Label column sm={3}>\r\n                                    Username\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"password\">\r\n                                <Form.Label column sm={3}>\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"confirmPassword\">\r\n                                <Form.Label column sm={3}>\r\n                                    Confirm password\r\n                                </Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control\r\n                                        required\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" style={{marginRight: \"5px\", float: \"right\"}}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RegisterForm","import { connect } from 'react-redux';\r\nimport { itemsFetchData, productFetchComments, productActiveKey, addComment, userLoggedIn } from '../actions/items';\r\nimport ProductList from './ui/ProductList';\r\nimport ProductComments from './ui/ProductComments';\r\nimport AddComment from './ui/AddComment';\r\nimport LoginForm from './ui/LoginForm';\r\nimport RegisterForm from './ui/RegisterForm';\r\n\r\n//Redux state mapping\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        hasErrored: state.itemsHasErrored,\r\n        isLoading: state.itemsIsLoading,\r\n        commentsHasErrored: state.commentsHasErrored,\r\n        commentsIsLoading: state.commentsIsLoading,\r\n        activeKey: state.activeKey,\r\n        comments: state.comments\r\n    };\r\n};\r\n//mapping the dispatch of our actions creator to component properties\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url) => dispatch(itemsFetchData(url)),\r\n        fetchComments: (url) => dispatch(productFetchComments(url)),\r\n        setActiveKey: (activeKey) => dispatch(productActiveKey(activeKey))\r\n    };\r\n};\r\nexport const Products = connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n// export const Comments = connect(mapStateToProps, mapDispatchToProps)(ProductComments);\r\nexport const Comments = connect(\r\n    (state, {match}) =>\r\n        ({\r\n            commentsHasErrored: state.commentsHasErrored,\r\n            commentsIsLoading: state.commentsIsLoading,\r\n            comments: state.comments\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            //fetchComments: (url) => dispatch(productFetchComments(url)),\r\n        })\r\n)(ProductComments);\r\n\r\nexport const AddCommentForm = connect(\r\n    (state) =>\r\n        ({\r\n            activeKey: state.activeKey,\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            addComment: (text, rate, productId) => dispatch(addComment(text, rate, productId)),\r\n        })\r\n)(AddComment);\r\n\r\nexport const UserLogin = connect(\r\n    (state) =>\r\n        ({\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            addUserStatus: (status, message, token) => dispatch(userLoggedIn(status, message, token)),\r\n        })\r\n)(LoginForm);\r\n\r\nexport const UserRegister = connect(\r\n    (state) =>\r\n        ({\r\n            userStatus: state.userStatus,\r\n        }),\r\n    dispatch =>\r\n        ({\r\n            addUserStatus: (status, message, token) => dispatch(userLoggedIn(status, message, token)),\r\n        })\r\n)(RegisterForm);","export function itemsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function itemsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_IS_LOADING':\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function commentsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'COMMENTS_IS_LOADING':\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function commentsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'COMMENTS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport function items(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_FETCH_DATA_SUCCESS':\r\n            return action.items;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function comments(state = [], action) {\r\n    switch (action.type) {\r\n        case 'PRODUCT_COMMENTS_FETCH_SUCCESS':\r\n            return action.comments;\r\n            // return [...state, action.comments];\r\n        case 'ADD_COMMENT' :\r\n            return [\r\n                ...state,\r\n                comment({}, action)\r\n            ]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function comment(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'ADD_COMMENT':\r\n            return {\r\n                id: action.id,\r\n                product: action.product,\r\n                text: action.text,\r\n                rate: action.rate,\r\n                created_at: action.timestamp,\r\n                created_by: action.created_by\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function activeKey(state = null, action) {\r\n    switch (action.type) {\r\n        case 'PRODUCT_ACTIVE_KEY':\r\n            return action.activeKey;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function userStatus(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'USER_LOGGED_IN':\r\n            return {\r\n                status: action.status,\r\n                message: action.message,\r\n                token: action.token\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { items, itemsHasErrored, itemsIsLoading, activeKey, commentsHasErrored, commentsIsLoading, comments, comment, userStatus} from './items';\r\n\r\nexport default combineReducers({\r\n    items,\r\n    itemsHasErrored,\r\n    itemsIsLoading,\r\n    commentsHasErrored,\r\n    commentsIsLoading,\r\n    comment,\r\n    comments,\r\n    activeKey,\r\n    userStatus\r\n});\r\n","/**\r\n * Created by User on 19.08.2019.\r\n */\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(thunk)\r\n    );\r\n}\r\n","/**\r\n * Created by User on 19.08.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Container, Alert } from \"react-bootstrap\";\r\n\r\nconst Whoops404 = ({ location }) =>\r\n    <div style={{margin: \"30px auto\" }}>\r\n        <Container>\r\n            <Alert lg={8} variant=\"danger\">\r\n                Whoops cannot find resource at '{location.pathname}'\r\n            </Alert>\r\n        </Container>\r\n    </div>\r\n\r\nexport default Whoops404","import React from 'react';\n// import './App.css';\nimport {Products, UserLogin, UserRegister} from './components/containers';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport Whoops404 from './components/ui/Whoops404';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Router>\n            <Switch>\n                {/*<Route exact path=\"/:id\" component={Product} />*/}\n                <Route path='/login' exact component={UserLogin}/>\n                <Route path='/register' exact component={UserRegister}/>\n                <Route path='/' exact component={Products}/>\n                    {/*<IndexRoute component={ItemList} />*/}\n                    {/*<Route path='admin' component={Admin} />*/}\n                    {/*<Route path='genre' component={Genre} />*/}\n                <Route component={Whoops404}/>\n            </Switch>\n        </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}